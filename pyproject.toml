[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyBADA"
version = "0.1.3"
authors = [
  { name="Henrich Glaser-Opitz", email="henrich.glaser-opitz@eurocontrol.int" }
]
description = "pyBADA"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)"
]

[dependency-groups]
bada = [
  "scipy>=1.15.2",
  "numpy>=2.2.3",
  "pandas>=2.2.3",
  "simplekml>=1.3.6",
  "XlsxWriter>=3.2.2"
]
dev = [
    "setuptools>=75.8.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "mypy>=1.14.1",
    "ruff>=0.9.2",
    "pre-commit>=4.0.1",
    "tomlkit>=0.13.2",
    "typer>=0.15.1",
]
docs = [
    "sphinx>=8.1.3",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-napoleon>=0.7",
    "myst-parser>=4.0.0",
    "pip-licenses>=5.0.0",
]

[tool.uv]
default-groups = [
	"bada",
    "dev",
    "docs",
]
license = { text = "EUPL-1.2" }

# Some additional deps not needed to run the package but to develop on it
# linter, formatter, to build the docs, ..
[project.optional-dependencies]
dev = ["black==25.1.0",
  "flake8==7.1.2",
  "sphinx-rtd-theme==3.0.2",
  "Sphinx==8.2.3",
  "pre-commit==4.1.0",
  "sphinx-gallery==0.19.0",
  "matplotlib==3.10.1",
  "folium==0.19.5",
  "pytest==8.3.5",
  "build",
  "twine",
  "readthedocs-sphinx-search>=0.3.2"
  ]

[project.urls]
"Homepage" = "https://github.com/eurocontrol-bada/pybada"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.ruff]
src = ["src","tests"]
line-length = 120

[tool.ruff.lint]
select = [
    "B", # Bugbear
    "C90", # McCabe complexity
    "D", # Pydocstyle
    "E", # Pycodestyle errors
    "F", # Pyflakes
    "I", # Isort
    "PL", # Pylint
    "Q", # Quotes
    "W", # Pycodestyle warnings
    "S"# Bandit
]
ignore = [
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
    "D401", # First line should be in imperative mood in docstring
    "D413", # Missing blank line after last section in docstring
]

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101" # Assert in test
]

[tool.ruff.lint.isort]
known-first-party = ["stubs"]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disable_error_code = ["import-untyped"]

[tool.black]
target-version = ['py312']
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | docs
  | dist
)/
'''

[tool.hatch.build.targets.wheel]
packages = ["src/pyBADA"]

[tool.hatch.build.targets.wheel.force-include]
"src/aircraft/BADA3/DUMMY" = "pyBADA/aircraft/BADA3/DUMMY"
"src/aircraft/BADA4/DUMMY" = "pyBADA/aircraft/BADA4/DUMMY"
"src/aircraft/BADAH/DUMMY" = "pyBADA/aircraft/BADAH/DUMMY"
"src/data" = "pyBADA/data"
